import asyncio
import asyncpg

async def test_connection():
    try:
        print("Intentando conectar a la base de datos...")
        conn = await asyncpg.connect("postgresql://postgres.bhvqkhzidgbyqzphqxaa:CZLoPBoc5lPBZPp1@aws-0-sa-east-1.pooler.supabase.com:5432/postgres")
        print("Conexión exitosa a la base de datos!")
        
        # Intentar una consulta simple
        version = await conn.fetchval("SELECT version()")
        print(f"Versión de PostgreSQL: {version}")
        
        # Listar tablas existentes
        print("\nTablas en la base de datos:")
        tables = await conn.fetch("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name
        """)
        
        if tables:
            for table in tables:
                print(f"- {table['table_name']}")
        else:
            print("No se encontraron tablas en el esquema público.")
            
        await conn.close()
    except Exception as e:
        print(f"Error al conectar a la base de datos: {e}")

# Ejecutar la función asíncrona
asyncio.run(test_connection())